/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package website.scraper.two;

import website.scraper.two.audit.BusinessAuditTracker;
import website.scraper.two.audit.SearchAuditTracker;
import website.scraper.two.bing.BingSearchClient;
import website.scraper.two.bing.model.BingSearchResponse;
import website.scraper.two.geo.LatLongAdjuster;

import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalDateTime;

public class App {

    public static void main(String[] args) throws IOException, InterruptedException {
        final BingSearchClient client = new BingSearchClient();
        final SearchAuditTracker searchAuditTracker = new SearchAuditTracker();
        final BusinessAuditTracker businessAuditTracker = new BusinessAuditTracker();

        // Cleveland area
//        double lat = 41.395870;
//        double longitude = -81.759224;

//        // Kansas city
//        double lat = 39.27798126215895;
//        double longitude = -95.62458192806936;

//        // Dallas
//        double lat = 33.41209530960486;
//        double longitude = -97.78085285622106;

//        // San Fran
//        double lat = 38.32347399656465;
//        double longitude = -122.39022661826235;

        // Indianapolis
        double lat = 39.86583899890004;
        double longitude = -86.15130856617311;

        // TODO:
        // scrape email
        // scrape facebook link

        final long globalTimestamp = System.currentTimeMillis();

        String query = "gyms";
        int radius = 5000;

        BingSearchResponse currentResult = null;
        int consecutive0Results = 0;
        while (currentResult == null || consecutive0Results < 50) {
            final LocalDateTime timestamp = LocalDateTime.now();

            currentResult = client.search(query, lat, longitude, radius);
            searchAuditTracker.track(query, lat, longitude, radius, currentResult, timestamp);
            businessAuditTracker.track(currentResult, timestamp, String.valueOf(globalTimestamp));

//            lat = LatLongAdjuster.adjustLatitudeByMeters(lat, radius);
            longitude = LatLongAdjuster.adjustLongitudeByMeters(lat, longitude, radius);

            if (currentResult.emptyResults()) {
                consecutive0Results++;
            } else {
                consecutive0Results = 0;
            }

            System.out.println("DONE: " + currentResult.resultCount());
            Thread.sleep(1000);

//            System.exit(0);
        }

    }
}
